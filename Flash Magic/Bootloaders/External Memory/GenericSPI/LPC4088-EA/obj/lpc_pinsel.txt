; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\lpc_pinsel.o --asm_dir=.\obj\ --list_dir=.\obj\ --depend=.\obj\lpc_pinsel.d --cpu=Cortex-M4.fp --apcs=interwork -O0 -I.\Core\CMSIS\Include -I.\Core\Device\NXP\LPC407x_8x_177x_8x\Include -I.\Drivers\include -I..\..\Core -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\NXP\LPC407x_8x_177x_8x -D__MICROLIB -D__RAM_MODE__ -DUSE_SPIFI_LIB -DCORE_M4 --omf_browse=.\obj\lpc_pinsel.crf Drivers\source\lpc_pinsel.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  PIN_GetPointer PROC
;;;54      **********************************************************************/
;;;55     static uint32_t * PIN_GetPointer(uint8_t portnum, uint8_t pinnum)
000000  b510              PUSH     {r4,lr}
;;;56     {
000002  4602              MOV      r2,r0
;;;57         uint32_t *pPIN = NULL;
000004  2000              MOVS     r0,#0
;;;58         pPIN = (uint32_t *)(LPC_IOCON_BASE + ((portnum * 32 + pinnum)*sizeof(uint32_t)));
000006  eb011342          ADD      r3,r1,r2,LSL #5
00000a  4cf7              LDR      r4,|L1.1000|
00000c  eb040083          ADD      r0,r4,r3,LSL #2
;;;59         return pPIN;
;;;60     }
000010  bd10              POP      {r4,pc}
;;;61     
                          ENDP

                  PINSEL_GetPinType PROC
;;;78      **********************************************************************/
;;;79     PinSel_PinType PINSEL_GetPinType(uint8_t portnum, uint8_t pinnum)
000012  4602              MOV      r2,r0
;;;80     {
;;;81         PinSel_PinType Ret = PINSEL_PIN_TYPE_UNKNOWN;
000014  2005              MOVS     r0,#5
;;;82         switch(portnum)
000016  2a06              CMP      r2,#6
000018  d24a              BCS      |L1.176|
00001a  e8dff002          TBB      [pc,r2]
00001e  032f              DCB      0x03,0x2f
000020  393a3b3d          DCB      0x39,0x3a,0x3b,0x3d
;;;83         {
;;;84             case 0:
;;;85                 if((pinnum <=6)||
000024  2906              CMP      r1,#6
000026  dd07              BLE      |L1.56|
;;;86                     ((pinnum >= 10)&&(pinnum <=11))||
000028  290a              CMP      r1,#0xa
00002a  db01              BLT      |L1.48|
00002c  290b              CMP      r1,#0xb
00002e  dd03              BLE      |L1.56|
                  |L1.48|
;;;87                     ((pinnum >= 14)&&(pinnum <=22)))
000030  290e              CMP      r1,#0xe
000032  db03              BLT      |L1.60|
000034  2916              CMP      r1,#0x16
000036  dc01              BGT      |L1.60|
                  |L1.56|
;;;88                     Ret = PINSEL_PIN_TYPE_D;
000038  2000              MOVS     r0,#0
00003a  e01e              B        |L1.122|
                  |L1.60|
;;;89                 else if ((pinnum == 12)||(pinnum==13)||
00003c  290c              CMP      r1,#0xc
00003e  d005              BEQ      |L1.76|
000040  290d              CMP      r1,#0xd
000042  d003              BEQ      |L1.76|
;;;90                         ((pinnum >= 23)&&(pinnum <=26)))
000044  2917              CMP      r1,#0x17
000046  db03              BLT      |L1.80|
000048  291a              CMP      r1,#0x1a
00004a  dc01              BGT      |L1.80|
                  |L1.76|
;;;91                     Ret = PINSEL_PIN_TYPE_A;
00004c  2001              MOVS     r0,#1
00004e  e014              B        |L1.122|
                  |L1.80|
;;;92                 else if ((pinnum == 29) || (pinnum==30)|| (pinnum==31))
000050  291d              CMP      r1,#0x1d
000052  d003              BEQ      |L1.92|
000054  291e              CMP      r1,#0x1e
000056  d001              BEQ      |L1.92|
000058  291f              CMP      r1,#0x1f
00005a  d101              BNE      |L1.96|
                  |L1.92|
;;;93                     Ret = PINSEL_PIN_TYPE_U;
00005c  2002              MOVS     r0,#2
00005e  e00c              B        |L1.122|
                  |L1.96|
;;;94                 else if ((pinnum == 27) || (pinnum==28))
000060  291b              CMP      r1,#0x1b
000062  d001              BEQ      |L1.104|
000064  291c              CMP      r1,#0x1c
000066  d101              BNE      |L1.108|
                  |L1.104|
;;;95                     Ret = PINSEL_PIN_TYPE_I;
000068  2003              MOVS     r0,#3
00006a  e006              B        |L1.122|
                  |L1.108|
;;;96                 else if ((pinnum == 7) || (pinnum==8)|| (pinnum==9))
00006c  2907              CMP      r1,#7
00006e  d003              BEQ      |L1.120|
000070  2908              CMP      r1,#8
000072  d001              BEQ      |L1.120|
000074  2909              CMP      r1,#9
000076  d100              BNE      |L1.122|
                  |L1.120|
;;;97                     Ret = PINSEL_PIN_TYPE_W;
000078  2004              MOVS     r0,#4
                  |L1.122|
;;;98                 break;
00007a  e01a              B        |L1.178|
;;;99             case 1:
;;;100                if(pinnum <=29)
00007c  291d              CMP      r1,#0x1d
00007e  dc01              BGT      |L1.132|
;;;101                    Ret = PINSEL_PIN_TYPE_D;
000080  2000              MOVS     r0,#0
000082  e004              B        |L1.142|
                  |L1.132|
;;;102                else if ((pinnum == 30) || (pinnum==31))
000084  291e              CMP      r1,#0x1e
000086  d001              BEQ      |L1.140|
000088  291f              CMP      r1,#0x1f
00008a  d100              BNE      |L1.142|
                  |L1.140|
;;;103                    Ret = PINSEL_PIN_TYPE_A;
00008c  2001              MOVS     r0,#1
                  |L1.142|
;;;104                break;
00008e  e010              B        |L1.178|
;;;105            case 2:
;;;106            case 3:
000090  bf00              NOP      
;;;107            case 4:
000092  bf00              NOP      
;;;108                Ret = PINSEL_PIN_TYPE_D;
000094  2000              MOVS     r0,#0
;;;109                break;
000096  e00c              B        |L1.178|
;;;110            case 5:
;;;111                if((pinnum <=1)||
000098  2901              CMP      r1,#1
00009a  dd01              BLE      |L1.160|
;;;112                    (pinnum == 4))
00009c  2904              CMP      r1,#4
00009e  d101              BNE      |L1.164|
                  |L1.160|
;;;113                    Ret = PINSEL_PIN_TYPE_D;
0000a0  2000              MOVS     r0,#0
0000a2  e004              B        |L1.174|
                  |L1.164|
;;;114                else if ((pinnum == 2) || (pinnum==3))
0000a4  2902              CMP      r1,#2
0000a6  d001              BEQ      |L1.172|
0000a8  2903              CMP      r1,#3
0000aa  d100              BNE      |L1.174|
                  |L1.172|
;;;115                    Ret = PINSEL_PIN_TYPE_I;
0000ac  2003              MOVS     r0,#3
                  |L1.174|
;;;116                break;
0000ae  e000              B        |L1.178|
                  |L1.176|
;;;117            default:
;;;118                break;
0000b0  bf00              NOP      
                  |L1.178|
0000b2  bf00              NOP                            ;98
;;;119        }
;;;120    
;;;121        return Ret;
;;;122    }
0000b4  4770              BX       lr
;;;123    
                          ENDP

                  PINSEL_ConfigPin PROC
;;;137     **********************************************************************/
;;;138    PINSEL_RET_CODE PINSEL_ConfigPin ( uint8_t portnum, uint8_t pinnum, uint8_t funcnum)
0000b6  e92d41f0          PUSH     {r4-r8,lr}
;;;139    {
0000ba  4606              MOV      r6,r0
0000bc  460f              MOV      r7,r1
0000be  4615              MOV      r5,r2
;;;140        uint32_t *pPIN = NULL;
0000c0  2400              MOVS     r4,#0
;;;141        PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
0000c2  4639              MOV      r1,r7
0000c4  4630              MOV      r0,r6
0000c6  f7fffffe          BL       PINSEL_GetPinType
0000ca  4680              MOV      r8,r0
;;;142    
;;;143        if(type == PINSEL_PIN_TYPE_UNKNOWN)
0000cc  f1b80f05          CMP      r8,#5
0000d0  d102              BNE      |L1.216|
;;;144            return PINSEL_RET_INVALID_PIN;
0000d2  48c6              LDR      r0,|L1.1004|
                  |L1.212|
;;;145        
;;;146        pPIN = PIN_GetPointer(portnum, pinnum);
;;;147        *pPIN &= ~IOCON_FUNC_MASK;//Clear function bits
;;;148        *pPIN |= funcnum&IOCON_FUNC_MASK;
;;;149    
;;;150        return PINSEL_RET_OK;
;;;151    }
0000d4  e8bd81f0          POP      {r4-r8,pc}
                  |L1.216|
0000d8  4639              MOV      r1,r7                 ;146
0000da  4630              MOV      r0,r6                 ;146
0000dc  f7fffffe          BL       PIN_GetPointer
0000e0  4604              MOV      r4,r0                 ;146
0000e2  6820              LDR      r0,[r4,#0]            ;147
0000e4  f0200007          BIC      r0,r0,#7              ;147
0000e8  6020              STR      r0,[r4,#0]            ;147
0000ea  f0050107          AND      r1,r5,#7              ;148
0000ee  6820              LDR      r0,[r4,#0]            ;148
0000f0  4308              ORRS     r0,r0,r1              ;148
0000f2  6020              STR      r0,[r4,#0]            ;148
0000f4  2000              MOVS     r0,#0                 ;150
0000f6  e7ed              B        |L1.212|
;;;152    
                          ENDP

                  PINSEL_SetPinMode PROC
;;;167     **********************************************************************/
;;;168    PINSEL_RET_CODE PINSEL_SetPinMode ( uint8_t portnum, uint8_t pinnum, PinSel_BasicMode modenum)
0000f8  e92d41f0          PUSH     {r4-r8,lr}
;;;169    {
0000fc  4607              MOV      r7,r0
0000fe  4688              MOV      r8,r1
000100  4616              MOV      r6,r2
;;;170        uint32_t *pPIN = NULL;
000102  2400              MOVS     r4,#0
;;;171        PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
000104  4641              MOV      r1,r8
000106  4638              MOV      r0,r7
000108  f7fffffe          BL       PINSEL_GetPinType
00010c  4605              MOV      r5,r0
;;;172    
;;;173        if(type == PINSEL_PIN_TYPE_UNKNOWN)
00010e  2d05              CMP      r5,#5
000110  d102              BNE      |L1.280|
;;;174            return PINSEL_RET_INVALID_PIN;
000112  48b6              LDR      r0,|L1.1004|
                  |L1.276|
;;;175        if((type != PINSEL_PIN_TYPE_D )&&
;;;176            (type != PINSEL_PIN_TYPE_A )&&
;;;177            (type != PINSEL_PIN_TYPE_W))
;;;178            return PINSEL_RET_NOT_SUPPORT;
;;;179        
;;;180        pPIN = PIN_GetPointer(portnum, pinnum);
;;;181        *(uint32_t *)pPIN &= ~(IOCON_MODE_MASK);//Clear function bits
;;;182        *(uint32_t *)pPIN |= (modenum << IOCON_MODE_POS)&IOCON_MODE_MASK;
;;;183    
;;;184        return PINSEL_RET_OK;
;;;185    }
000114  e8bd81f0          POP      {r4-r8,pc}
                  |L1.280|
000118  b135              CBZ      r5,|L1.296|
00011a  2d01              CMP      r5,#1                 ;176
00011c  d004              BEQ      |L1.296|
00011e  2d04              CMP      r5,#4                 ;177
000120  d002              BEQ      |L1.296|
000122  48b2              LDR      r0,|L1.1004|
000124  1c40              ADDS     r0,r0,#1              ;178
000126  e7f5              B        |L1.276|
                  |L1.296|
000128  4641              MOV      r1,r8                 ;180
00012a  4638              MOV      r0,r7                 ;180
00012c  f7fffffe          BL       PIN_GetPointer
000130  4604              MOV      r4,r0                 ;180
000132  6820              LDR      r0,[r4,#0]            ;181
000134  f0200018          BIC      r0,r0,#0x18           ;181
000138  6020              STR      r0,[r4,#0]            ;181
00013a  2118              MOVS     r1,#0x18              ;182
00013c  ea0101c6          AND      r1,r1,r6,LSL #3       ;182
000140  6820              LDR      r0,[r4,#0]            ;182
000142  4308              ORRS     r0,r0,r1              ;182
000144  6020              STR      r0,[r4,#0]            ;182
000146  2000              MOVS     r0,#0                 ;184
000148  e7e4              B        |L1.276|
;;;186    
                          ENDP

                  PINSEL_SetHysMode PROC
;;;198     **********************************************************************/
;;;199    PINSEL_RET_CODE PINSEL_SetHysMode(uint8_t portnum, uint8_t pinnum, FunctionalState NewState)
00014a  e92d41f0          PUSH     {r4-r8,lr}
;;;200    {
00014e  4607              MOV      r7,r0
000150  4688              MOV      r8,r1
000152  4616              MOV      r6,r2
;;;201        uint32_t *pPIN = NULL;
000154  2400              MOVS     r4,#0
;;;202        PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
000156  4641              MOV      r1,r8
000158  4638              MOV      r0,r7
00015a  f7fffffe          BL       PINSEL_GetPinType
00015e  4605              MOV      r5,r0
;;;203    
;;;204        if(type == PINSEL_PIN_TYPE_UNKNOWN)
000160  2d05              CMP      r5,#5
000162  d102              BNE      |L1.362|
;;;205            return PINSEL_RET_INVALID_PIN;
000164  48a1              LDR      r0,|L1.1004|
                  |L1.358|
;;;206        if((type != PINSEL_PIN_TYPE_D )&&
;;;207            (type != PINSEL_PIN_TYPE_W))
;;;208            return PINSEL_RET_NOT_SUPPORT;
;;;209        
;;;210        pPIN = PIN_GetPointer(portnum, pinnum);
;;;211        if(NewState == DISABLE)
;;;212        {
;;;213            *(uint32_t *)pPIN &= ~IOCON_HYS_ENABLE;//Clear hys bits
;;;214        }
;;;215        else
;;;216            *(uint32_t *)pPIN |= IOCON_HYS_ENABLE;
;;;217    
;;;218        return PINSEL_RET_OK;
;;;219    }
000166  e8bd81f0          POP      {r4-r8,pc}
                  |L1.362|
00016a  b125              CBZ      r5,|L1.374|
00016c  2d04              CMP      r5,#4                 ;207
00016e  d002              BEQ      |L1.374|
000170  489e              LDR      r0,|L1.1004|
000172  1c40              ADDS     r0,r0,#1              ;208
000174  e7f7              B        |L1.358|
                  |L1.374|
000176  4641              MOV      r1,r8                 ;210
000178  4638              MOV      r0,r7                 ;210
00017a  f7fffffe          BL       PIN_GetPointer
00017e  4604              MOV      r4,r0                 ;210
000180  b926              CBNZ     r6,|L1.396|
000182  6820              LDR      r0,[r4,#0]            ;213
000184  f0200020          BIC      r0,r0,#0x20           ;213
000188  6020              STR      r0,[r4,#0]            ;213
00018a  e003              B        |L1.404|
                  |L1.396|
00018c  6820              LDR      r0,[r4,#0]            ;216
00018e  f0400020          ORR      r0,r0,#0x20           ;216
000192  6020              STR      r0,[r4,#0]            ;216
                  |L1.404|
000194  2000              MOVS     r0,#0                 ;218
000196  e7e6              B        |L1.358|
;;;220    /*********************************************************************//**
                          ENDP

                  PINSEL_SetInvertInput PROC
;;;231     **********************************************************************/
;;;232    PINSEL_RET_CODE PINSEL_SetInvertInput(uint8_t portnum, uint8_t pinnum, FunctionalState NewState)
000198  e92d41f0          PUSH     {r4-r8,lr}
;;;233    {
00019c  4607              MOV      r7,r0
00019e  4688              MOV      r8,r1
0001a0  4615              MOV      r5,r2
;;;234        uint32_t *pPIN = NULL;
0001a2  2400              MOVS     r4,#0
;;;235        PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
0001a4  4641              MOV      r1,r8
0001a6  4638              MOV      r0,r7
0001a8  f7fffffe          BL       PINSEL_GetPinType
0001ac  4606              MOV      r6,r0
;;;236    
;;;237        if(type == PINSEL_PIN_TYPE_UNKNOWN)
0001ae  2e05              CMP      r6,#5
0001b0  d102              BNE      |L1.440|
;;;238            return PINSEL_RET_INVALID_PIN;
0001b2  488e              LDR      r0,|L1.1004|
                  |L1.436|
;;;239        if(type== PINSEL_PIN_TYPE_U)
;;;240            return PINSEL_RET_NOT_SUPPORT;
;;;241        
;;;242        pPIN = PIN_GetPointer(portnum, pinnum);
;;;243        if(NewState == DISABLE)
;;;244        {
;;;245            *(uint32_t *)pPIN &= ~IOCON_INVERT_INPUT;//Clear hys bits
;;;246        }
;;;247        else
;;;248            *(uint32_t *)pPIN |= IOCON_INVERT_INPUT;
;;;249    
;;;250        return PINSEL_RET_OK;
;;;251    }
0001b4  e8bd81f0          POP      {r4-r8,pc}
                  |L1.440|
0001b8  2e02              CMP      r6,#2                 ;239
0001ba  d102              BNE      |L1.450|
0001bc  488b              LDR      r0,|L1.1004|
0001be  1c40              ADDS     r0,r0,#1              ;240
0001c0  e7f8              B        |L1.436|
                  |L1.450|
0001c2  4641              MOV      r1,r8                 ;242
0001c4  4638              MOV      r0,r7                 ;242
0001c6  f7fffffe          BL       PIN_GetPointer
0001ca  4604              MOV      r4,r0                 ;242
0001cc  b925              CBNZ     r5,|L1.472|
0001ce  6820              LDR      r0,[r4,#0]            ;245
0001d0  f0200040          BIC      r0,r0,#0x40           ;245
0001d4  6020              STR      r0,[r4,#0]            ;245
0001d6  e003              B        |L1.480|
                  |L1.472|
0001d8  6820              LDR      r0,[r4,#0]            ;248
0001da  f0400040          ORR      r0,r0,#0x40           ;248
0001de  6020              STR      r0,[r4,#0]            ;248
                  |L1.480|
0001e0  2000              MOVS     r0,#0                 ;250
0001e2  e7e7              B        |L1.436|
;;;252    
                          ENDP

                  PINSEL_SetSlewMode PROC
;;;264     **********************************************************************/
;;;265    PINSEL_RET_CODE PINSEL_SetSlewMode(uint8_t portnum, uint8_t pinnum, FunctionalState NewState)
0001e4  e92d41f0          PUSH     {r4-r8,lr}
;;;266    {
0001e8  4607              MOV      r7,r0
0001ea  4688              MOV      r8,r1
0001ec  4616              MOV      r6,r2
;;;267        uint32_t *pPIN = NULL;
0001ee  2400              MOVS     r4,#0
;;;268        PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
0001f0  4641              MOV      r1,r8
0001f2  4638              MOV      r0,r7
0001f4  f7fffffe          BL       PINSEL_GetPinType
0001f8  4605              MOV      r5,r0
;;;269    
;;;270        if(type == PINSEL_PIN_TYPE_UNKNOWN)
0001fa  2d05              CMP      r5,#5
0001fc  d102              BNE      |L1.516|
;;;271            return PINSEL_RET_INVALID_PIN;
0001fe  487b              LDR      r0,|L1.1004|
                  |L1.512|
;;;272        if((type!= PINSEL_PIN_TYPE_D) &&
;;;273            (type!= PINSEL_PIN_TYPE_W))
;;;274            return PINSEL_RET_NOT_SUPPORT;
;;;275        
;;;276        pPIN = PIN_GetPointer(portnum, pinnum);
;;;277        if(NewState == DISABLE)
;;;278        {
;;;279            *(uint32_t *)pPIN &= ~IOCON_SLEW_ENABLE;//Clear hys bits
;;;280        }
;;;281        else
;;;282            *(uint32_t *)pPIN |= IOCON_SLEW_ENABLE;
;;;283    
;;;284        return PINSEL_RET_OK;
;;;285    }
000200  e8bd81f0          POP      {r4-r8,pc}
                  |L1.516|
000204  b125              CBZ      r5,|L1.528|
000206  2d04              CMP      r5,#4                 ;273
000208  d002              BEQ      |L1.528|
00020a  4878              LDR      r0,|L1.1004|
00020c  1c40              ADDS     r0,r0,#1              ;274
00020e  e7f7              B        |L1.512|
                  |L1.528|
000210  4641              MOV      r1,r8                 ;276
000212  4638              MOV      r0,r7                 ;276
000214  f7fffffe          BL       PIN_GetPointer
000218  4604              MOV      r4,r0                 ;276
00021a  b926              CBNZ     r6,|L1.550|
00021c  6820              LDR      r0,[r4,#0]            ;279
00021e  f4207000          BIC      r0,r0,#0x200          ;279
000222  6020              STR      r0,[r4,#0]            ;279
000224  e003              B        |L1.558|
                  |L1.550|
000226  6820              LDR      r0,[r4,#0]            ;282
000228  f4407000          ORR      r0,r0,#0x200          ;282
00022c  6020              STR      r0,[r4,#0]            ;282
                  |L1.558|
00022e  2000              MOVS     r0,#0                 ;284
000230  e7e6              B        |L1.512|
;;;286    
                          ENDP

                  PINSEL_SetI2CFilter PROC
;;;503     **********************************************************************/
;;;504    PINSEL_RET_CODE PINSEL_SetI2CFilter (uint8_t portnum, uint8_t pinnum, uint8_t enable)
000232  e92d41f0          PUSH     {r4-r8,lr}
;;;505    {
000236  4607              MOV      r7,r0
000238  4688              MOV      r8,r1
00023a  4615              MOV      r5,r2
;;;506        uint32_t *pPIN = NULL;
00023c  2400              MOVS     r4,#0
;;;507        PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
00023e  4641              MOV      r1,r8
000240  4638              MOV      r0,r7
000242  f7fffffe          BL       PINSEL_GetPinType
000246  4606              MOV      r6,r0
;;;508        
;;;509        if(type == PINSEL_PIN_TYPE_UNKNOWN)
000248  2e05              CMP      r6,#5
00024a  d102              BNE      |L1.594|
;;;510            return PINSEL_RET_INVALID_PIN;
00024c  4867              LDR      r0,|L1.1004|
                  |L1.590|
;;;511        if(type != PINSEL_PIN_TYPE_I)
;;;512            return PINSEL_RET_NOT_SUPPORT;
;;;513    
;;;514        pPIN = PIN_GetPointer(portnum, pinnum);
;;;515    
;;;516    
;;;517        if(enable)
;;;518        {
;;;519            *(uint32_t *)pPIN &= ~(IOCON_HS_MASK);//Clear 8th bit to 0
;;;520        }
;;;521        else
;;;522        {
;;;523            *(uint32_t *)pPIN |= (IOCON_I2C_FILTER_DISABLE);//Set 8th bit to one
;;;524        }
;;;525    
;;;526    
;;;527        return PINSEL_RET_OK;
;;;528    }
00024e  e8bd81f0          POP      {r4-r8,pc}
                  |L1.594|
000252  2e03              CMP      r6,#3                 ;511
000254  d002              BEQ      |L1.604|
000256  4865              LDR      r0,|L1.1004|
000258  1c40              ADDS     r0,r0,#1              ;512
00025a  e7f8              B        |L1.590|
                  |L1.604|
00025c  4641              MOV      r1,r8                 ;514
00025e  4638              MOV      r0,r7                 ;514
000260  f7fffffe          BL       PIN_GetPointer
000264  4604              MOV      r4,r0                 ;514
000266  b125              CBZ      r5,|L1.626|
000268  6820              LDR      r0,[r4,#0]            ;519
00026a  f4207080          BIC      r0,r0,#0x100          ;519
00026e  6020              STR      r0,[r4,#0]            ;519
000270  e003              B        |L1.634|
                  |L1.626|
000272  6820              LDR      r0,[r4,#0]            ;523
000274  f4407080          ORR      r0,r0,#0x100          ;523
000278  6020              STR      r0,[r4,#0]            ;523
                  |L1.634|
00027a  2000              MOVS     r0,#0                 ;527
00027c  e7e7              B        |L1.590|
;;;529    
                          ENDP

                  PINSEL_SetI2CMode PROC
;;;299     **********************************************************************/
;;;300    PINSEL_RET_CODE PINSEL_SetI2CMode(uint8_t portnum, uint8_t pinnum, PinSel_I2cMode I2CMode)
00027e  e92d41f0          PUSH     {r4-r8,lr}
;;;301    {
000282  4607              MOV      r7,r0
000284  4688              MOV      r8,r1
000286  4615              MOV      r5,r2
;;;302        uint32_t *pPIN = NULL;
000288  2400              MOVS     r4,#0
;;;303        PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
00028a  4641              MOV      r1,r8
00028c  4638              MOV      r0,r7
00028e  f7fffffe          BL       PINSEL_GetPinType
000292  4606              MOV      r6,r0
;;;304    
;;;305        if(type == PINSEL_PIN_TYPE_UNKNOWN)
000294  2e05              CMP      r6,#5
000296  d102              BNE      |L1.670|
;;;306            return PINSEL_RET_INVALID_PIN;
000298  4854              LDR      r0,|L1.1004|
                  |L1.666|
;;;307        if(type != PINSEL_PIN_TYPE_I )
;;;308            return PINSEL_RET_NOT_SUPPORT;
;;;309        
;;;310        pPIN = PIN_GetPointer(portnum, pinnum);
;;;311    
;;;312        switch(I2CMode)
;;;313        {
;;;314            // Standard/Fast Mode I2C: HS = HIDRIVE = 0
;;;315            case PINSEL_I2CMODE_FAST_STANDARD: 
;;;316                PINSEL_SetI2CFilter(portnum,pinnum,ENABLE);
;;;317                *(uint32_t *)pPIN &= ~(IOCON_I2CMODE_FASTPLUS);
;;;318                break;
;;;319    
;;;320            // Non-I2C: HS = 1, HIDRIVE = 0
;;;321            case PINSEL_I2CMODE_OPENDRAINIO:
;;;322                PINSEL_SetI2CFilter(portnum,pinnum,DISABLE);
;;;323                *(uint32_t *)pPIN &= ~(IOCON_I2CMODE_FASTPLUS);
;;;324                break;
;;;325    
;;;326            // Fast Mode Plus I2C: HS = 0, HIDRIVE =1
;;;327            case PINSEL_I2CMODE_FASTMODEPLUS:   
;;;328                PINSEL_SetI2CFilter(portnum,pinnum,ENABLE);
;;;329                *(uint32_t *)pPIN |= (IOCON_I2CMODE_FASTPLUS);
;;;330                break;
;;;331            default:
;;;332                return PINSEL_RET_ERR;
;;;333        }
;;;334    
;;;335        return PINSEL_RET_OK;
;;;336    }
00029a  e8bd81f0          POP      {r4-r8,pc}
                  |L1.670|
00029e  2e03              CMP      r6,#3                 ;307
0002a0  d002              BEQ      |L1.680|
0002a2  4852              LDR      r0,|L1.1004|
0002a4  1c40              ADDS     r0,r0,#1              ;308
0002a6  e7f8              B        |L1.666|
                  |L1.680|
0002a8  4641              MOV      r1,r8                 ;310
0002aa  4638              MOV      r0,r7                 ;310
0002ac  f7fffffe          BL       PIN_GetPointer
0002b0  4604              MOV      r4,r0                 ;310
0002b2  b125              CBZ      r5,|L1.702|
0002b4  2d01              CMP      r5,#1                 ;312
0002b6  d00c              BEQ      |L1.722|
0002b8  2d02              CMP      r5,#2                 ;312
0002ba  d11e              BNE      |L1.762|
0002bc  e013              B        |L1.742|
                  |L1.702|
0002be  2201              MOVS     r2,#1                 ;316
0002c0  4641              MOV      r1,r8                 ;316
0002c2  4638              MOV      r0,r7                 ;316
0002c4  f7fffffe          BL       PINSEL_SetI2CFilter
0002c8  6820              LDR      r0,[r4,#0]            ;317
0002ca  f4207000          BIC      r0,r0,#0x200          ;317
0002ce  6020              STR      r0,[r4,#0]            ;317
0002d0  e016              B        |L1.768|
                  |L1.722|
0002d2  2200              MOVS     r2,#0                 ;322
0002d4  4641              MOV      r1,r8                 ;322
0002d6  4638              MOV      r0,r7                 ;322
0002d8  f7fffffe          BL       PINSEL_SetI2CFilter
0002dc  6820              LDR      r0,[r4,#0]            ;323
0002de  f4207000          BIC      r0,r0,#0x200          ;323
0002e2  6020              STR      r0,[r4,#0]            ;323
0002e4  e00c              B        |L1.768|
                  |L1.742|
0002e6  2201              MOVS     r2,#1                 ;328
0002e8  4641              MOV      r1,r8                 ;328
0002ea  4638              MOV      r0,r7                 ;328
0002ec  f7fffffe          BL       PINSEL_SetI2CFilter
0002f0  6820              LDR      r0,[r4,#0]            ;329
0002f2  f4407000          ORR      r0,r0,#0x200          ;329
0002f6  6020              STR      r0,[r4,#0]            ;329
0002f8  e002              B        |L1.768|
                  |L1.762|
0002fa  f04f30ff          MOV      r0,#0xffffffff        ;332
0002fe  e7cc              B        |L1.666|
                  |L1.768|
000300  bf00              NOP                            ;318
000302  2000              MOVS     r0,#0                 ;335
000304  e7c9              B        |L1.666|
;;;337    
                          ENDP

                  PINSEL_SetOpenDrainMode PROC
;;;349     **********************************************************************/
;;;350    PINSEL_RET_CODE PINSEL_SetOpenDrainMode(uint8_t portnum, uint8_t pinnum, FunctionalState NewState)
000306  e92d41f0          PUSH     {r4-r8,lr}
;;;351    {
00030a  4607              MOV      r7,r0
00030c  4688              MOV      r8,r1
00030e  4616              MOV      r6,r2
;;;352        uint32_t *pPIN = NULL;
000310  2400              MOVS     r4,#0
;;;353        PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
000312  4641              MOV      r1,r8
000314  4638              MOV      r0,r7
000316  f7fffffe          BL       PINSEL_GetPinType
00031a  4605              MOV      r5,r0
;;;354    
;;;355        if(type == PINSEL_PIN_TYPE_UNKNOWN)
00031c  2d05              CMP      r5,#5
00031e  d102              BNE      |L1.806|
;;;356            return PINSEL_RET_INVALID_PIN;
000320  4832              LDR      r0,|L1.1004|
                  |L1.802|
;;;357        if((type != PINSEL_PIN_TYPE_D ) &&
;;;358            (type != PINSEL_PIN_TYPE_A ) &&
;;;359            (type != PINSEL_PIN_TYPE_W ))
;;;360            return PINSEL_RET_NOT_SUPPORT;
;;;361        
;;;362        pPIN = PIN_GetPointer(portnum, pinnum);
;;;363        if(NewState == DISABLE)
;;;364        {
;;;365            *(uint32_t *)pPIN &= ~IOCON_OPENDRAIN_MODE;//Clear hys bits
;;;366        }
;;;367        else
;;;368        {
;;;369            *(uint32_t *)pPIN |= IOCON_OPENDRAIN_MODE;
;;;370        }
;;;371        return PINSEL_RET_OK;
;;;372    }
000322  e8bd81f0          POP      {r4-r8,pc}
                  |L1.806|
000326  b135              CBZ      r5,|L1.822|
000328  2d01              CMP      r5,#1                 ;358
00032a  d004              BEQ      |L1.822|
00032c  2d04              CMP      r5,#4                 ;359
00032e  d002              BEQ      |L1.822|
000330  482e              LDR      r0,|L1.1004|
000332  1c40              ADDS     r0,r0,#1              ;360
000334  e7f5              B        |L1.802|
                  |L1.822|
000336  4641              MOV      r1,r8                 ;362
000338  4638              MOV      r0,r7                 ;362
00033a  f7fffffe          BL       PIN_GetPointer
00033e  4604              MOV      r4,r0                 ;362
000340  b926              CBNZ     r6,|L1.844|
000342  6820              LDR      r0,[r4,#0]            ;365
000344  f4206080          BIC      r0,r0,#0x400          ;365
000348  6020              STR      r0,[r4,#0]            ;365
00034a  e003              B        |L1.852|
                  |L1.844|
00034c  6820              LDR      r0,[r4,#0]            ;369
00034e  f4406080          ORR      r0,r0,#0x400          ;369
000352  6020              STR      r0,[r4,#0]            ;369
                  |L1.852|
000354  2000              MOVS     r0,#0                 ;371
000356  e7e4              B        |L1.802|
;;;373    
                          ENDP

                  PINSEL_SetAnalogPinMode PROC
;;;385     **********************************************************************/
;;;386    PINSEL_RET_CODE PINSEL_SetAnalogPinMode (uint8_t portnum, uint8_t pinnum, uint8_t enable)
000358  e92d41f0          PUSH     {r4-r8,lr}
;;;387    {
00035c  4607              MOV      r7,r0
00035e  4688              MOV      r8,r1
000360  4615              MOV      r5,r2
;;;388        uint32_t *pPIN = NULL;
000362  2400              MOVS     r4,#0
;;;389        PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
000364  4641              MOV      r1,r8
000366  4638              MOV      r0,r7
000368  f7fffffe          BL       PINSEL_GetPinType
00036c  4606              MOV      r6,r0
;;;390    
;;;391        if(type == PINSEL_PIN_TYPE_UNKNOWN)
00036e  2e05              CMP      r6,#5
000370  d102              BNE      |L1.888|
;;;392            return PINSEL_RET_INVALID_PIN;
000372  481e              LDR      r0,|L1.1004|
                  |L1.884|
;;;393        if(type != PINSEL_PIN_TYPE_A )
;;;394            return PINSEL_RET_NOT_SUPPORT;
;;;395    
;;;396        pPIN = PIN_GetPointer(portnum, pinnum);
;;;397    
;;;398        if(enable)
;;;399        {
;;;400            *(uint32_t *)pPIN &= ~(IOCON_DIGITIAL_MODE);
;;;401        }
;;;402        else
;;;403        {
;;;404            *(uint32_t *)pPIN |= IOCON_DIGITIAL_MODE;//Set 7th bit to one
;;;405        }
;;;406    
;;;407        return PINSEL_RET_OK;
;;;408    }
000374  e8bd81f0          POP      {r4-r8,pc}
                  |L1.888|
000378  2e01              CMP      r6,#1                 ;393
00037a  d002              BEQ      |L1.898|
00037c  481b              LDR      r0,|L1.1004|
00037e  1c40              ADDS     r0,r0,#1              ;394
000380  e7f8              B        |L1.884|
                  |L1.898|
000382  4641              MOV      r1,r8                 ;396
000384  4638              MOV      r0,r7                 ;396
000386  f7fffffe          BL       PIN_GetPointer
00038a  4604              MOV      r4,r0                 ;396
00038c  b125              CBZ      r5,|L1.920|
00038e  6820              LDR      r0,[r4,#0]            ;400
000390  f0200080          BIC      r0,r0,#0x80           ;400
000394  6020              STR      r0,[r4,#0]            ;400
000396  e003              B        |L1.928|
                  |L1.920|
000398  6820              LDR      r0,[r4,#0]            ;404
00039a  f0400080          ORR      r0,r0,#0x80           ;404
00039e  6020              STR      r0,[r4,#0]            ;404
                  |L1.928|
0003a0  2000              MOVS     r0,#0                 ;407
0003a2  e7e7              B        |L1.884|
;;;409    
                          ENDP

                  PINSEL_DacEnable PROC
;;;423     **********************************************************************/
;;;424    PINSEL_RET_CODE PINSEL_DacEnable (uint8_t portnum, uint8_t pinnum, uint8_t enable)
0003a4  e92d41f0          PUSH     {r4-r8,lr}
;;;425    {
0003a8  4605              MOV      r5,r0
0003aa  460e              MOV      r6,r1
0003ac  4617              MOV      r7,r2
;;;426        uint32_t *pPIN = NULL;
0003ae  2400              MOVS     r4,#0
;;;427        
;;;428        PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
0003b0  4631              MOV      r1,r6
0003b2  4628              MOV      r0,r5
0003b4  f7fffffe          BL       PINSEL_GetPinType
0003b8  4680              MOV      r8,r0
;;;429        
;;;430        if(type == PINSEL_PIN_TYPE_UNKNOWN)
0003ba  f1b80f05          CMP      r8,#5
0003be  d102              BNE      |L1.966|
;;;431            return PINSEL_RET_INVALID_PIN;
0003c0  480a              LDR      r0,|L1.1004|
                  |L1.962|
;;;432    
;;;433        // This setting is only for DAC pin (output pin)
;;;434        if(!((portnum == 0) && (pinnum == 26)))
;;;435        {
;;;436            return PINSEL_RET_NOT_SUPPORT;
;;;437        }
;;;438    
;;;439        pPIN = PIN_GetPointer(portnum, pinnum);
;;;440    
;;;441        if(enable)
;;;442        {
;;;443            *(uint32_t *)pPIN |= IOCON_DAC_ENABLE;//Set 16th bit to one
;;;444        }
;;;445        else
;;;446        {
;;;447            *(uint32_t *)pPIN &= ~IOCON_DAC_ENABLE;//Set 16th bit to one
;;;448    
;;;449        }
;;;450    
;;;451        return PINSEL_RET_OK;
;;;452    }
0003c2  e8bd81f0          POP      {r4-r8,pc}
                  |L1.966|
0003c6  b90d              CBNZ     r5,|L1.972|
0003c8  2e1a              CMP      r6,#0x1a              ;434
0003ca  d002              BEQ      |L1.978|
                  |L1.972|
0003cc  4807              LDR      r0,|L1.1004|
0003ce  1c40              ADDS     r0,r0,#1              ;436
0003d0  e7f7              B        |L1.962|
                  |L1.978|
0003d2  4631              MOV      r1,r6                 ;439
0003d4  4628              MOV      r0,r5                 ;439
0003d6  f7fffffe          BL       PIN_GetPointer
0003da  4604              MOV      r4,r0                 ;439
0003dc  b147              CBZ      r7,|L1.1008|
0003de  6820              LDR      r0,[r4,#0]            ;443
0003e0  f4403080          ORR      r0,r0,#0x10000        ;443
0003e4  6020              STR      r0,[r4,#0]            ;443
0003e6  e007              B        |L1.1016|
                  |L1.1000|
                          DCD      0x4002c000
                  |L1.1004|
                          DCD      0x10000001
                  |L1.1008|
0003f0  6820              LDR      r0,[r4,#0]            ;447
0003f2  f4203080          BIC      r0,r0,#0x10000        ;447
0003f6  6020              STR      r0,[r4,#0]            ;447
                  |L1.1016|
0003f8  2000              MOVS     r0,#0                 ;451
0003fa  e7e2              B        |L1.962|
;;;453    
                          ENDP

                  PINSEL_SetFilter PROC
;;;465     **********************************************************************/
;;;466    PINSEL_RET_CODE PINSEL_SetFilter (uint8_t portnum, uint8_t pinnum, uint8_t enable)
0003fc  e92d41f0          PUSH     {r4-r8,lr}
;;;467    {
000400  4607              MOV      r7,r0
000402  4688              MOV      r8,r1
000404  4616              MOV      r6,r2
;;;468        uint32_t *pPIN = NULL;
000406  2400              MOVS     r4,#0
;;;469        PinSel_PinType type = PINSEL_GetPinType(portnum,pinnum);
000408  4641              MOV      r1,r8
00040a  4638              MOV      r0,r7
00040c  f7fffffe          BL       PINSEL_GetPinType
000410  4605              MOV      r5,r0
;;;470        
;;;471        if(type == PINSEL_PIN_TYPE_UNKNOWN)
000412  2d05              CMP      r5,#5
000414  d102              BNE      |L1.1052|
;;;472            return PINSEL_RET_INVALID_PIN;
000416  480d              LDR      r0,|L1.1100|
                  |L1.1048|
;;;473        if((type != PINSEL_PIN_TYPE_A ) &&
;;;474            (type != PINSEL_PIN_TYPE_W ))
;;;475            return PINSEL_RET_NOT_SUPPORT;
;;;476    
;;;477        pPIN = PIN_GetPointer(portnum, pinnum);
;;;478    
;;;479    
;;;480        if(enable)
;;;481        {
;;;482            *(uint32_t *)pPIN &= ~(IOCON_10ns_FILTER_DISABLE);//Clear 8th bit to 0
;;;483        }
;;;484        else
;;;485        {
;;;486            *(uint32_t *)pPIN |= (IOCON_10ns_FILTER_DISABLE);//Set 8th bit to one
;;;487        }
;;;488    
;;;489    
;;;490        return PINSEL_RET_OK;
;;;491    }
000418  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1052|
00041c  2d01              CMP      r5,#1                 ;473
00041e  d004              BEQ      |L1.1066|
000420  2d04              CMP      r5,#4                 ;474
000422  d002              BEQ      |L1.1066|
000424  4809              LDR      r0,|L1.1100|
000426  1c40              ADDS     r0,r0,#1              ;475
000428  e7f6              B        |L1.1048|
                  |L1.1066|
00042a  4641              MOV      r1,r8                 ;477
00042c  4638              MOV      r0,r7                 ;477
00042e  f7fffffe          BL       PIN_GetPointer
000432  4604              MOV      r4,r0                 ;477
000434  b126              CBZ      r6,|L1.1088|
000436  6820              LDR      r0,[r4,#0]            ;482
000438  f4207080          BIC      r0,r0,#0x100          ;482
00043c  6020              STR      r0,[r4,#0]            ;482
00043e  e003              B        |L1.1096|
                  |L1.1088|
000440  6820              LDR      r0,[r4,#0]            ;486
000442  f4407080          ORR      r0,r0,#0x100          ;486
000446  6020              STR      r0,[r4,#0]            ;486
                  |L1.1096|
000448  2000              MOVS     r0,#0                 ;490
00044a  e7e5              B        |L1.1048|
;;;492    /*********************************************************************//**
                          ENDP

                  |L1.1100|
                          DCD      0x10000001

;*** Start embedded assembler ***

#line 1 "Drivers\\source\\lpc_pinsel.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___12_lpc_pinsel_c_179e972f____REV16|
#line 115 ".\\Core\\CMSIS\\Include\\core_cmInstr.h"
|__asm___12_lpc_pinsel_c_179e972f____REV16| PROC
#line 116

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___12_lpc_pinsel_c_179e972f____REVSH|
#line 129
|__asm___12_lpc_pinsel_c_179e972f____REVSH| PROC
#line 130

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
