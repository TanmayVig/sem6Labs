; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\main.o --asm_dir=.\obj\ --list_dir=.\obj\ --depend=.\obj\main.d --cpu=Cortex-M4.fp --apcs=interwork -O0 -I.\Core\CMSIS\Include -I.\Core\Device\NXP\LPC407x_8x_177x_8x\Include -I.\Drivers\include -I..\..\Core -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\NXP\LPC407x_8x_177x_8x -D__MICROLIB -D__RAM_MODE__ -DUSE_SPIFI_LIB -DCORE_M4 --omf_browse=.\obj\main.crf main.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  SysTick_Handler PROC
;;;12     // of time
;;;13     void SysTick_Handler(void)
000000  480e              LDR      r0,|L1.60|
;;;14     {
;;;15       gBootloaderTick++;
000002  8800              LDRH     r0,[r0,#0]  ; gBootloaderTick
000004  1c40              ADDS     r0,r0,#1
000006  490d              LDR      r1,|L1.60|
000008  8008              STRH     r0,[r1,#0]
;;;16     }
00000a  4770              BX       lr
;;;17     
                          ENDP

                  c_entry PROC
;;;22      **********************************************************************/
;;;23     int c_entry(void)
00000c  480c              LDR      r0,|L1.64|
;;;24     {
;;;25       // set vector table to RAM
;;;26       // this address must match the start address for the linker
;;;27       NVIC_SetVTOR(0x10000500);
00000e  f7fffffe          BL       NVIC_SetVTOR
;;;28       
;;;29       SYSTICK_InternalInit(1);
000012  2001              MOVS     r0,#1
000014  f7fffffe          BL       SYSTICK_InternalInit
;;;30       SYSTICK_Cmd(ENABLE);
000018  2001              MOVS     r0,#1
00001a  f7fffffe          BL       SYSTICK_Cmd
;;;31       SYSTICK_IntCmd(ENABLE);
00001e  2001              MOVS     r0,#1
000020  f7fffffe          BL       SYSTICK_IntCmd
;;;32     
;;;33       // initialize bootloader
;;;34       if (!Bootloader_Init(120))
000024  2078              MOVS     r0,#0x78
000026  f7fffffe          BL       Bootloader_Init
00002a  b908              CBNZ     r0,|L1.48|
;;;35       {
;;;36         while(1);
00002c  bf00              NOP      
                  |L1.46|
00002e  e7fe              B        |L1.46|
                  |L1.48|
;;;37       }
;;;38     
;;;39       while (1)
000030  e001              B        |L1.54|
                  |L1.50|
;;;40       {
;;;41         Bootloader_Process();
000032  f7fffffe          BL       Bootloader_Process
                  |L1.54|
000036  e7fc              B        |L1.50|
;;;42       }
;;;43     }
;;;44     
                          ENDP

                  main PROC
;;;49     // file, and that startup code will setup stacks and data
;;;50     int main(void)
000038  f7fffffe          BL       c_entry
;;;51     {   
;;;52       return c_entry();
;;;53     }
                          ENDP

                  |L1.60|
                          DCD      gBootloaderTick
                  |L1.64|
                          DCD      0x10000500

;*** Start embedded assembler ***

#line 1 "main.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_b672aa62____REV16|
#line 115 ".\\Core\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_main_c_b672aa62____REV16| PROC
#line 116

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_b672aa62____REVSH|
#line 129
|__asm___6_main_c_b672aa62____REVSH| PROC
#line 130

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
