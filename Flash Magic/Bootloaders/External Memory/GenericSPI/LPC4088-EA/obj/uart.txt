; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\uart.o --asm_dir=.\obj\ --list_dir=.\obj\ --depend=.\obj\uart.d --cpu=Cortex-M4.fp --apcs=interwork -O0 -I.\Core\CMSIS\Include -I.\Core\Device\NXP\LPC407x_8x_177x_8x\Include -I.\Drivers\include -I..\..\Core -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\NXP\LPC407x_8x_177x_8x -D__MICROLIB -D__RAM_MODE__ -DUSE_SPIFI_LIB -DCORE_M4 --omf_browse=.\obj\uart.crf uart.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  Host_Initialize PROC
;;;11     // initializes the uart for sending and receiving
;;;12     void Host_Initialize
000000  b53e              PUSH     {r1-r5,lr}
;;;13       (
;;;14       uint32_t baudrate                                      // baudrate in kbps
;;;15       )
;;;16     {
000002  4604              MOV      r4,r0
;;;17       UART_CFG_Type UARTConfig;
;;;18       UART_FIFO_CFG_Type UARTRxFIFO;
;;;19     
;;;20       UART_DeInit(UART_0);
000004  2000              MOVS     r0,#0
000006  f7fffffe          BL       UART_DeInit
;;;21       
;;;22       // configure UART0
;;;23       UARTConfig.Baud_rate = baudrate;
00000a  9401              STR      r4,[sp,#4]
;;;24       UARTConfig.Parity = UART_PARITY_NONE;
00000c  2000              MOVS     r0,#0
00000e  f88d0008          STRB     r0,[sp,#8]
;;;25       UARTConfig.Databits = UART_DATABIT_8;
000012  2003              MOVS     r0,#3
000014  f88d0009          STRB     r0,[sp,#9]
;;;26       UARTConfig.Stopbits = UART_STOPBIT_1;
000018  2000              MOVS     r0,#0
00001a  f88d000a          STRB     r0,[sp,#0xa]
;;;27       UART_Init(UART_0, &UARTConfig);
00001e  a901              ADD      r1,sp,#4
000020  f7fffffe          BL       UART_Init
;;;28       // pinsel for UART0
;;;29       PINSEL_ConfigPin(0, 2, 1); // LPC4088 P0.2 as U2_TXD
000024  2201              MOVS     r2,#1
000026  2102              MOVS     r1,#2
000028  2000              MOVS     r0,#0
00002a  f7fffffe          BL       PINSEL_ConfigPin
;;;30       PINSEL_ConfigPin(0, 3, 1); // LPC4088 P0.3 as U2_RXD
00002e  2201              MOVS     r2,#1
000030  2103              MOVS     r1,#3
000032  2000              MOVS     r0,#0
000034  f7fffffe          BL       PINSEL_ConfigPin
;;;31       // enable transmit
;;;32       UART_TxCmd(UART_0, ENABLE);
000038  2101              MOVS     r1,#1
00003a  2000              MOVS     r0,#0
00003c  f7fffffe          BL       UART_TxCmd
;;;33     
;;;34       // create receive FIFO
;;;35       UART_FIFOConfigStructInit(&UARTRxFIFO);
000040  4668              MOV      r0,sp
000042  f7fffffe          BL       UART_FIFOConfigStructInit
;;;36       UART_FIFOConfig(UART_0, &UARTRxFIFO);
000046  4669              MOV      r1,sp
000048  2000              MOVS     r0,#0
00004a  f7fffffe          BL       UART_FIFOConfig
;;;37     }
00004e  bd3e              POP      {r1-r5,pc}
;;;38     
                          ENDP

                  Host_SendData PROC
;;;39     // sends data from the UART
;;;40     void Host_SendData
000050  b570              PUSH     {r4-r6,lr}
;;;41       (
;;;42       uint8_t *data,
;;;43       int length
;;;44       )
;;;45     {
000052  4604              MOV      r4,r0
000054  460d              MOV      r5,r1
;;;46       UART_Send(UART_0, data, length, BLOCKING);
000056  2301              MOVS     r3,#1
000058  462a              MOV      r2,r5
00005a  4621              MOV      r1,r4
00005c  2000              MOVS     r0,#0
00005e  f7fffffe          BL       UART_Send
;;;47     }
000062  bd70              POP      {r4-r6,pc}
;;;48     
                          ENDP

                  Host_Debug PROC
;;;50     // message must be null terminated
;;;51     void Host_Debug(char *Message)
000064  4770              BX       lr
;;;52     {
;;;53       // not supported
;;;54     }
;;;55     
                          ENDP

                  Host_ReceiveData PROC
;;;58     // should return immediately if there is no data to be read
;;;59     int Host_ReceiveData
000066  b570              PUSH     {r4-r6,lr}
;;;60       (
;;;61       uint8_t *buffer,
;;;62       int maxlength
;;;63       )
;;;64     {
000068  4604              MOV      r4,r0
00006a  460d              MOV      r5,r1
;;;65       return UART_Receive(UART_0, buffer, maxlength, NONE_BLOCKING);
00006c  2300              MOVS     r3,#0
00006e  462a              MOV      r2,r5
000070  4621              MOV      r1,r4
000072  4618              MOV      r0,r3
000074  f7fffffe          BL       UART_Receive
;;;66     }
000078  bd70              POP      {r4-r6,pc}
                          ENDP


;*** Start embedded assembler ***

#line 1 "uart.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___6_uart_c_b70689c5____REV16|
#line 115 ".\\Core\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_uart_c_b70689c5____REV16| PROC
#line 116

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___6_uart_c_b70689c5____REVSH|
#line 129
|__asm___6_uart_c_b70689c5____REVSH| PROC
#line 130

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
