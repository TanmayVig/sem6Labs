; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\lpc_clkpwr.o --asm_dir=.\obj\ --list_dir=.\obj\ --depend=.\obj\lpc_clkpwr.d --cpu=Cortex-M4.fp --apcs=interwork -O0 -I.\Core\CMSIS\Include -I.\Core\Device\NXP\LPC407x_8x_177x_8x\Include -I.\Drivers\include -I..\..\Core -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\NXP\LPC407x_8x_177x_8x -D__MICROLIB -D__RAM_MODE__ -DUSE_SPIFI_LIB -DCORE_M4 --omf_browse=.\obj\lpc_clkpwr.crf Drivers\source\lpc_clkpwr.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  CLKPWR_SetCLKDiv PROC
;;;75      **********************************************************************/
;;;76     void CLKPWR_SetCLKDiv (uint8_t ClkType, uint8_t DivVal)
000000  b570              PUSH     {r4-r6,lr}
;;;77     {
000002  4606              MOV      r6,r0
000004  460d              MOV      r5,r1
;;;78         uint32_t tmp;
;;;79         switch(ClkType)
000006  b136              CBZ      r6,|L1.22|
000008  2e01              CMP      r6,#1
00000a  d011              BEQ      |L1.48|
00000c  2e02              CMP      r6,#2
00000e  d01d              BEQ      |L1.76|
000010  2e03              CMP      r6,#3
000012  d13d              BNE      |L1.144|
000014  e028              B        |L1.104|
                  |L1.22|
;;;80         {
;;;81         case CLKPWR_CLKTYPE_CPU:
;;;82             tmp =   LPC_SC->CCLKSEL & ~(0x1F);
000016  4846              LDR      r0,|L1.304|
000018  6800              LDR      r0,[r0,#0]
00001a  f020041f          BIC      r4,r0,#0x1f
;;;83             tmp |=  DivVal & 0x1F;
00001e  f005001f          AND      r0,r5,#0x1f
000022  4304              ORRS     r4,r4,r0
;;;84             LPC_SC->CCLKSEL = tmp;
000024  4843              LDR      r0,|L1.308|
000026  f8c04104          STR      r4,[r0,#0x104]
;;;85             SystemCoreClockUpdate(); //Update clock
00002a  f7fffffe          BL       SystemCoreClockUpdate
;;;86             break;
00002e  e031              B        |L1.148|
                  |L1.48|
;;;87         case CLKPWR_CLKTYPE_PER:
;;;88             tmp =   LPC_SC->PCLKSEL & ~(0x1F);
000030  483f              LDR      r0,|L1.304|
000032  30a4              ADDS     r0,r0,#0xa4
000034  6800              LDR      r0,[r0,#0]
000036  f020041f          BIC      r4,r0,#0x1f
;;;89             tmp |=  DivVal & 0x1F;
00003a  f005001f          AND      r0,r5,#0x1f
00003e  4304              ORRS     r4,r4,r0
;;;90             LPC_SC->PCLKSEL = tmp;
000040  483c              LDR      r0,|L1.308|
000042  f8c041a8          STR      r4,[r0,#0x1a8]
;;;91             SystemCoreClockUpdate(); //Update clock
000046  f7fffffe          BL       SystemCoreClockUpdate
;;;92             break;
00004a  e023              B        |L1.148|
                  |L1.76|
;;;93         case CLKPWR_CLKTYPE_EMC:
;;;94             tmp =   LPC_SC->EMCCLKSEL & ~(0x01);
00004c  4838              LDR      r0,|L1.304|
00004e  1f00              SUBS     r0,r0,#4
000050  6800              LDR      r0,[r0,#0]
000052  f0200401          BIC      r4,r0,#1
;;;95             tmp |=  DivVal & 0x01;
000056  f0050001          AND      r0,r5,#1
00005a  4304              ORRS     r4,r4,r0
;;;96             LPC_SC->EMCCLKSEL = tmp;
00005c  4835              LDR      r0,|L1.308|
00005e  f8c04100          STR      r4,[r0,#0x100]
;;;97             SystemCoreClockUpdate(); //Update clock
000062  f7fffffe          BL       SystemCoreClockUpdate
;;;98             break;
000066  e015              B        |L1.148|
                  |L1.104|
;;;99         case CLKPWR_CLKTYPE_USB:
;;;100            tmp =   LPC_SC->USBCLKSEL & ~(0x1F);
000068  4831              LDR      r0,|L1.304|
00006a  1d00              ADDS     r0,r0,#4
00006c  6800              LDR      r0,[r0,#0]
00006e  f020041f          BIC      r4,r0,#0x1f
;;;101            tmp |=  DivVal & 0x1F;
000072  f005001f          AND      r0,r5,#0x1f
000076  4304              ORRS     r4,r4,r0
;;;102            LPC_SC->USBCLKSEL |= DivVal & 0x1F;
000078  482e              LDR      r0,|L1.308|
00007a  f8d00108          LDR      r0,[r0,#0x108]
00007e  f005011f          AND      r1,r5,#0x1f
000082  4308              ORRS     r0,r0,r1
000084  492a              LDR      r1,|L1.304|
000086  1d09              ADDS     r1,r1,#4
000088  6008              STR      r0,[r1,#0]
;;;103            SystemCoreClockUpdate(); //Update clock
00008a  f7fffffe          BL       SystemCoreClockUpdate
;;;104            break;
00008e  e001              B        |L1.148|
                  |L1.144|
;;;105        default:
;;;106            while(1);//Error Loop;
000090  bf00              NOP      
                  |L1.146|
000092  e7fe              B        |L1.146|
                  |L1.148|
000094  bf00              NOP                            ;86
;;;107        }
;;;108    }
000096  bd70              POP      {r4-r6,pc}
;;;109    
                          ENDP

                  CLKPWR_GetCLK PROC
;;;117     **********************************************************************/
;;;118    uint32_t CLKPWR_GetCLK (uint8_t ClkType)
000098  4601              MOV      r1,r0
;;;119    {
;;;120        switch(ClkType)
00009a  b131              CBZ      r1,|L1.170|
00009c  2901              CMP      r1,#1
00009e  d007              BEQ      |L1.176|
0000a0  2902              CMP      r1,#2
0000a2  d008              BEQ      |L1.182|
0000a4  2903              CMP      r1,#3
0000a6  d10c              BNE      |L1.194|
0000a8  e008              B        |L1.188|
                  |L1.170|
;;;121        {
;;;122            case CLKPWR_CLKTYPE_CPU:
;;;123                return SystemCoreClock;
0000aa  4823              LDR      r0,|L1.312|
0000ac  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
                  |L1.174|
;;;124    
;;;125            case CLKPWR_CLKTYPE_PER:
;;;126                return PeripheralClock;
;;;127    
;;;128            case CLKPWR_CLKTYPE_EMC:
;;;129                return EMCClock;
;;;130    
;;;131            case CLKPWR_CLKTYPE_USB:
;;;132                return USBClock;
;;;133    
;;;134            default:
;;;135                while(1);//error loop
;;;136        }
;;;137    }
0000ae  4770              BX       lr
                  |L1.176|
0000b0  4822              LDR      r0,|L1.316|
0000b2  6800              LDR      r0,[r0,#0]            ;126  ; PeripheralClock
0000b4  e7fb              B        |L1.174|
                  |L1.182|
0000b6  4822              LDR      r0,|L1.320|
0000b8  6800              LDR      r0,[r0,#0]            ;129  ; EMCClock
0000ba  e7f8              B        |L1.174|
                  |L1.188|
0000bc  4821              LDR      r0,|L1.324|
0000be  6800              LDR      r0,[r0,#0]            ;132  ; USBClock
0000c0  e7f5              B        |L1.174|
                  |L1.194|
0000c2  bf00              NOP                            ;135
                  |L1.196|
0000c4  e7fe              B        |L1.196|
;;;138    
                          ENDP

                  CLKPWR_ConfigPPWR PROC
;;;182     **********************************************************************/
;;;183    void CLKPWR_ConfigPPWR (uint32_t PPType, FunctionalState NewState)
0000c6  2901              CMP      r1,#1
;;;184    {
;;;185        if (NewState == ENABLE)
0000c8  d107              BNE      |L1.218|
;;;186        {
;;;187            LPC_SC->PCONP |= PPType;
0000ca  4a19              LDR      r2,|L1.304|
0000cc  3a40              SUBS     r2,r2,#0x40
0000ce  6812              LDR      r2,[r2,#0]
0000d0  4302              ORRS     r2,r2,r0
0000d2  4b18              LDR      r3,|L1.308|
0000d4  f8c320c4          STR      r2,[r3,#0xc4]
0000d8  e007              B        |L1.234|
                  |L1.218|
;;;188        }
;;;189        else if (NewState == DISABLE)
0000da  b931              CBNZ     r1,|L1.234|
;;;190        {
;;;191            LPC_SC->PCONP &= ~PPType;
0000dc  4a14              LDR      r2,|L1.304|
0000de  3a40              SUBS     r2,r2,#0x40
0000e0  6812              LDR      r2,[r2,#0]
0000e2  4382              BICS     r2,r2,r0
0000e4  4b13              LDR      r3,|L1.308|
0000e6  f8c320c4          STR      r2,[r3,#0xc4]
                  |L1.234|
;;;192        }
;;;193    }
0000ea  4770              BX       lr
;;;194    
                          ENDP

                  CLKPWR_Sleep PROC
;;;263     **********************************************************************/
;;;264    void CLKPWR_Sleep(void)
0000ec  2000              MOVS     r0,#0
;;;265    {
;;;266        LPC_SC->PCON = 0x00;
0000ee  4910              LDR      r1,|L1.304|
0000f0  3944              SUBS     r1,r1,#0x44
0000f2  6008              STR      r0,[r1,#0]
;;;267        /* Sleep Mode*/
;;;268        __WFI();
0000f4  bf30              WFI      
;;;269    }
0000f6  4770              BX       lr
;;;270    
                          ENDP

                  CLKPWR_DeepSleep PROC
;;;276     **********************************************************************/
;;;277    void CLKPWR_DeepSleep(void)
0000f8  2004              MOVS     r0,#4
;;;278    {
;;;279        /* Deep-Sleep Mode, set SLEEPDEEP bit */
;;;280        SCB->SCR = 0x4;
0000fa  4913              LDR      r1,|L1.328|
0000fc  6008              STR      r0,[r1,#0]
;;;281        LPC_SC->PCON = 0x00;
0000fe  2000              MOVS     r0,#0
000100  490b              LDR      r1,|L1.304|
000102  3944              SUBS     r1,r1,#0x44
000104  6008              STR      r0,[r1,#0]
;;;282        /* Deep Sleep Mode*/
;;;283        __WFI();
000106  bf30              WFI      
;;;284    }
000108  4770              BX       lr
;;;285    
                          ENDP

                  CLKPWR_PowerDown PROC
;;;291     **********************************************************************/
;;;292    void CLKPWR_PowerDown(void)
00010a  2004              MOVS     r0,#4
;;;293    {
;;;294        /* Deep-Sleep Mode, set SLEEPDEEP bit */
;;;295        SCB->SCR = 0x4;
00010c  490e              LDR      r1,|L1.328|
00010e  6008              STR      r0,[r1,#0]
;;;296        LPC_SC->PCON = 0x01;
000110  2001              MOVS     r0,#1
000112  4907              LDR      r1,|L1.304|
000114  3944              SUBS     r1,r1,#0x44
000116  6008              STR      r0,[r1,#0]
;;;297        /* Power Down Mode*/
;;;298        __WFI();
000118  bf30              WFI      
;;;299    }
00011a  4770              BX       lr
;;;300    
                          ENDP

                  CLKPWR_DeepPowerDown PROC
;;;306     **********************************************************************/
;;;307    void CLKPWR_DeepPowerDown(void)
00011c  2004              MOVS     r0,#4
;;;308    {
;;;309        /* Deep-Sleep Mode, set SLEEPDEEP bit */
;;;310        SCB->SCR = 0x4;
00011e  490a              LDR      r1,|L1.328|
000120  6008              STR      r0,[r1,#0]
;;;311        LPC_SC->PCON = 0x03;
000122  2003              MOVS     r0,#3
000124  4902              LDR      r1,|L1.304|
000126  3944              SUBS     r1,r1,#0x44
000128  6008              STR      r0,[r1,#0]
;;;312        /* Deep Power Down Mode*/
;;;313        __WFI();
00012a  bf30              WFI      
;;;314    }
00012c  4770              BX       lr
;;;315    
                          ENDP

00012e  0000              DCW      0x0000
                  |L1.304|
                          DCD      0x400fc104
                  |L1.308|
                          DCD      0x400fc000
                  |L1.312|
                          DCD      SystemCoreClock
                  |L1.316|
                          DCD      PeripheralClock
                  |L1.320|
                          DCD      EMCClock
                  |L1.324|
                          DCD      USBClock
                  |L1.328|
                          DCD      0xe000ed10

                          AREA ||.data||, DATA, ALIGN=2

                  USBFrequency
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "Drivers\\source\\lpc_clkpwr.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___12_lpc_clkpwr_c_e699a9d5____REV16|
#line 115 ".\\Core\\CMSIS\\Include\\core_cmInstr.h"
|__asm___12_lpc_clkpwr_c_e699a9d5____REV16| PROC
#line 116

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___12_lpc_clkpwr_c_e699a9d5____REVSH|
#line 129
|__asm___12_lpc_clkpwr_c_e699a9d5____REVSH| PROC
#line 130

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
