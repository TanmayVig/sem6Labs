; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\lpc_nvic.o --asm_dir=.\obj\ --list_dir=.\obj\ --depend=.\obj\lpc_nvic.d --cpu=Cortex-M4.fp --apcs=interwork -O0 -I.\Core\CMSIS\Include -I.\Core\Device\NXP\LPC407x_8x_177x_8x\Include -I.\Drivers\include -I..\..\Core -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\NXP\LPC407x_8x_177x_8x -D__MICROLIB -D__RAM_MODE__ -DUSE_SPIFI_LIB -DCORE_M4 --omf_browse=.\obj\lpc_nvic.crf Drivers\source\lpc_nvic.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  NVIC_DeInit PROC
;;;79      *******************************************************************************/
;;;80     void NVIC_DeInit(void)
000000  f04f31ff          MOV      r1,#0xffffffff
;;;81     {
;;;82         uint8_t tmp;
;;;83     
;;;84         /* Disable all interrupts */
;;;85         NVIC->ICER[0] = 0xFFFFFFFF;
000004  4a20              LDR      r2,|L1.136|
000006  6011              STR      r1,[r2,#0]
;;;86         NVIC->ICER[1] = 0x00000001;
000008  2201              MOVS     r2,#1
00000a  491f              LDR      r1,|L1.136|
00000c  3980              SUBS     r1,r1,#0x80
00000e  f8c12084          STR      r2,[r1,#0x84]
;;;87         /* Clear all pending interrupts */
;;;88         NVIC->ICPR[0] = 0xFFFFFFFF;
000012  1749              ASRS     r1,r1,#29
000014  f04f22e0          MOV      r2,#0xe000e000
000018  f8c21280          STR      r1,[r2,#0x280]
;;;89         NVIC->ICPR[1] = 0x00000001;
00001c  2201              MOVS     r2,#1
00001e  491b              LDR      r1,|L1.140|
000020  600a              STR      r2,[r1,#0]
;;;90     
;;;91         /* Clear all interrupt priority */
;;;92         for (tmp = 0; tmp < 32; tmp++) {
000022  2000              MOVS     r0,#0
000024  e004              B        |L1.48|
                  |L1.38|
;;;93             NVIC->IP[tmp] = 0x00;
000026  2200              MOVS     r2,#0
000028  4919              LDR      r1,|L1.144|
00002a  540a              STRB     r2,[r1,r0]
00002c  1c41              ADDS     r1,r0,#1              ;92
00002e  b2c8              UXTB     r0,r1                 ;92
                  |L1.48|
000030  2820              CMP      r0,#0x20              ;92
000032  dbf8              BLT      |L1.38|
;;;94         }
;;;95     }
000034  4770              BX       lr
;;;96     
                          ENDP

                  NVIC_SCBDeInit PROC
;;;114     *******************************************************************************/
;;;115    void NVIC_SCBDeInit(void)
000036  f04f6120          MOV      r1,#0xa000000
;;;116    {
;;;117        uint8_t tmp;
;;;118    
;;;119        SCB->ICSR = 0x0A000000;
00003a  4a16              LDR      r2,|L1.148|
00003c  6011              STR      r1,[r2,#0]
;;;120        SCB->VTOR = 0x00000000;
00003e  2100              MOVS     r1,#0
000040  1d12              ADDS     r2,r2,#4
000042  6011              STR      r1,[r2,#0]
;;;121        SCB->AIRCR = 0x05FA0000;
000044  4914              LDR      r1,|L1.152|
000046  1d12              ADDS     r2,r2,#4
000048  6011              STR      r1,[r2,#0]
;;;122        SCB->SCR = 0x00000000;
00004a  2100              MOVS     r1,#0
00004c  1d12              ADDS     r2,r2,#4
00004e  6011              STR      r1,[r2,#0]
;;;123        SCB->CCR = 0x00000000;
000050  1d12              ADDS     r2,r2,#4
000052  6011              STR      r1,[r2,#0]
;;;124    
;;;125        for (tmp = 0; tmp < 32; tmp++) {
000054  2000              MOVS     r0,#0
000056  e005              B        |L1.100|
                  |L1.88|
;;;126            SCB->SHP[tmp] = 0x00;
000058  2200              MOVS     r2,#0
00005a  490e              LDR      r1,|L1.148|
00005c  3114              ADDS     r1,r1,#0x14
00005e  540a              STRB     r2,[r1,r0]
000060  1c41              ADDS     r1,r0,#1              ;125
000062  b2c8              UXTB     r0,r1                 ;125
                  |L1.100|
000064  2820              CMP      r0,#0x20              ;125
000066  dbf7              BLT      |L1.88|
;;;127        }
;;;128    
;;;129        SCB->SHCSR = 0x00000000;
000068  2100              MOVS     r1,#0
00006a  4a0a              LDR      r2,|L1.148|
00006c  3220              ADDS     r2,r2,#0x20
00006e  6011              STR      r1,[r2,#0]
;;;130        SCB->CFSR = 0xFFFFFFFF;
000070  1e49              SUBS     r1,r1,#1
000072  1d12              ADDS     r2,r2,#4
000074  6011              STR      r1,[r2,#0]
;;;131        SCB->HFSR = 0xFFFFFFFF;
000076  1d12              ADDS     r2,r2,#4
000078  6011              STR      r1,[r2,#0]
;;;132        SCB->DFSR = 0xFFFFFFFF;
00007a  1d12              ADDS     r2,r2,#4
00007c  6011              STR      r1,[r2,#0]
;;;133    }
00007e  4770              BX       lr
;;;134    
                          ENDP

                  NVIC_SetVTOR PROC
;;;140     *******************************************************************************/
;;;141    void NVIC_SetVTOR(uint32_t offset)
000080  4904              LDR      r1,|L1.148|
;;;142    {
;;;143    //  SCB->VTOR  = (offset & NVIC_VTOR_MASK);
;;;144        SCB->VTOR  = offset;
000082  1d09              ADDS     r1,r1,#4
000084  6008              STR      r0,[r1,#0]
;;;145    }
000086  4770              BX       lr
;;;146    
                          ENDP

                  |L1.136|
                          DCD      0xe000e180
                  |L1.140|
                          DCD      0xe000e284
                  |L1.144|
                          DCD      0xe000e400
                  |L1.148|
                          DCD      0xe000ed04
                  |L1.152|
                          DCD      0x05fa0000

;*** Start embedded assembler ***

#line 1 "Drivers\\source\\lpc_nvic.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___10_lpc_nvic_c_d914b817____REV16|
#line 115 ".\\Core\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_lpc_nvic_c_d914b817____REV16| PROC
#line 116

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___10_lpc_nvic_c_d914b817____REVSH|
#line 129
|__asm___10_lpc_nvic_c_d914b817____REVSH| PROC
#line 130

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
