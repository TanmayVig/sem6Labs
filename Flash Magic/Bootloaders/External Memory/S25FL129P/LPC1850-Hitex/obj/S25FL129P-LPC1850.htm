<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\S25FL129P-LPC1850.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\S25FL129P-LPC1850.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060061: Last Updated: Wed Jun 29 14:39:52 2016
<BR><P>
<H3>Maximum Stack Usage =        308 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
spifi_program &rArr; setProt &rArr; set_mem_mode &rArr; wren_send04 &rArr; send04 &rArr; cmd
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[1b]">ADC0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">ADC0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1b]">ADC0_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[1f]">ADC1_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[27]">AES_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[a]">DAC_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[c]">DMA_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[f]">ETH_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[b]">EVRT_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[1c]">I2C0_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[1d]">I2C1_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[26]">I2S_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[11]">LCD_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[1a]">MCPWM_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[d]">RESERVED0</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[e]">RESERVED1</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[1e]">RESERVED2</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[15]">RIT_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[14]">SCT_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[10]">SDIO_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[28]">SPIFI_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[20]">SSP0_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[21]">SSP1_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from main.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[2a]">SystemInit</a> from system_lpc18xx.o(.text) referenced from startup_lpc18xx.o(.text)
 <LI><a href="#[16]">TIMER0_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[17]">TIMER1_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[18]">TIMER2_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[19]">TIMER3_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[22]">UART0_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[23]">UART1_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[24]">UART2_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[25]">UART3_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[12]">USB0_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[13]">USB1_IRQHandler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_lpc18xx.o(.text) referenced from startup_lpc18xx.o(RESET)
 <LI><a href="#[2b]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_lpc18xx.o(.text)
 <LI><a href="#[30]">amic</a> from amic.o(.text) referenced from spifi_rom_api.o(.text)
 <LI><a href="#[2e]">atm</a> from atmel.o(.text) referenced from spifi_rom_api.o(.text)
 <LI><a href="#[3a]">cancel_mem_mode</a> from spifi_rom_api.o(.text) referenced from spifi_rom_api.o(.constdata)
 <LI><a href="#[3c]">checkAd</a> from spifi_rom_api.o(.text) referenced from spifi_rom_api.o(.constdata)
 <LI><a href="#[3e]">check_block</a> from spifi_rom_api.o(.text) referenced from spifi_rom_api.o(.constdata)
 <LI><a href="#[31]">chi</a> from chi.o(.text) referenced from spifi_rom_api.o(.text)
 <LI><a href="#[40]">ck_erase</a> from spifi_rom_api.o(.text) referenced from spifi_rom_api.o(.constdata)
 <LI><a href="#[42]">ck_prog</a> from spifi_rom_api.o(.text) referenced from spifi_rom_api.o(.constdata)
 <LI><a href="#[45]">cmd</a> from spifi_rom_api.o(.text) referenced from spifi_rom_api.o(.constdata)
 <LI><a href="#[2d]">eon</a> from eon.o(.text) referenced from spifi_rom_api.o(.text)
 <LI><a href="#[32]">esmt</a> from esmt.o(.text) referenced from spifi_rom_api.o(.text)
 <LI><a href="#[35]">giga</a> from giga.o(.text) referenced from spifi_rom_api.o(.text)
 <LI><a href="#[29]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[34]">mxic</a> from macronix.o(.text) referenced from spifi_rom_api.o(.text)
 <LI><a href="#[2f]">numo</a> from numonyx.o(.text) referenced from spifi_rom_api.o(.text)
 <LI><a href="#[41]">prog_block</a> from spifi_rom_api.o(.text) referenced from spifi_rom_api.o(.constdata)
 <LI><a href="#[46]">readAd</a> from spifi_rom_api.o(.text) referenced from spifi_rom_api.o(.constdata)
 <LI><a href="#[47]">send04</a> from spifi_rom_api.o(.text) referenced from spifi_rom_api.o(.constdata)
 <LI><a href="#[3f]">send_erase_cmd</a> from spifi_rom_api.o(.text) referenced from spifi_rom_api.o(.constdata)
 <LI><a href="#[44]">setDev</a> from spifi_rom_api.o(.text) referenced from spifi_rom_api.o(.constdata)
 <LI><a href="#[3d]">setProt</a> from spifi_rom_api.o(.text) referenced from spifi_rom_api.o(.constdata)
 <LI><a href="#[43]">setSize</a> from spifi_rom_api.o(.text) referenced from spifi_rom_api.o(.constdata)
 <LI><a href="#[3b]">set_mem_mode</a> from spifi_rom_api.o(.text) referenced from spifi_rom_api.o(.constdata)
 <LI><a href="#[2c]">span</a> from spansion.o(.text) referenced from spifi_rom_api.o(.text)
 <LI><a href="#[39]">spifi_erase</a> from spifi_rom_api.o(.text) referenced from spifi_rom_api.o(.constdata)
 <LI><a href="#[37]">spifi_init</a> from spifi_rom_api.o(.text) referenced from spifi_rom_api.o(.constdata)
 <LI><a href="#[38]">spifi_program</a> from spifi_rom_api.o(.text) referenced from spifi_rom_api.o(.constdata)
 <LI><a href="#[33]">sst</a> from sst.o(.text) referenced from spifi_rom_api.o(.text)
 <LI><a href="#[4a]">wait_busy</a> from spifi_rom_api.o(.text) referenced from spifi_rom_api.o(.constdata)
 <LI><a href="#[36]">wbd</a> from winbond.o(.text) referenced from spifi_rom_api.o(.text)
 <LI><a href="#[48]">wren_sendAd</a> from spifi_rom_api.o(.text) referenced from spifi_rom_api.o(.constdata)
 <LI><a href="#[49]">write_stat</a> from spifi_rom_api.o(.text) referenced from spifi_rom_api.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2b]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(.text)
</UL>
<P><STRONG><a name="[a9]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[4b]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[a8]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[aa]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[ab]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[ac]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[ad]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[ae]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>ADC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>AES_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EVRT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>SCT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>SPIFI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>USB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>USB1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>getPC</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[55]"></a>SetClock</STRONG> (Thumb, 376 bytes, Stack size 12 bytes, system_lpc18xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetClock
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[4f]"></a>SystemInit_ExtMemCtl</STRONG> (Thumb, 1276 bytes, Stack size 48 bytes, system_lpc18xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SystemInit_ExtMemCtl &rArr; WaitUs &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUs
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[af]"></a>MeasureFreq</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, system_lpc18xx.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>GetClkSel</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, system_lpc18xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetClockFreq
</UL>

<P><STRONG><a name="[50]"></a>GetClockFreq</STRONG> (Thumb, 238 bytes, Stack size 32 bytes, system_lpc18xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GetClockFreq &rArr; GetPLL1Param
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPLL1Param
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetClkSel
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[53]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, system_lpc18xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SystemCoreClockUpdate &rArr; GetClockFreq &rArr; GetPLL1Param
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[2a]"></a>SystemInit</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, system_lpc18xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SystemInit &rArr; SystemInit_ExtMemCtl &rArr; WaitUs &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit_ExtMemCtl
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetClock
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPC
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(.text)
</UL>
<P><STRONG><a name="[58]"></a>UART_Init</STRONG> (Thumb, 366 bytes, Stack size 16 bytes, lpc18xx_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = UART_Init &rArr; uart_set_divisors &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_EntityConnect
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_set_divisors
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_Initialize
</UL>

<P><STRONG><a name="[5b]"></a>UART_TxCmd</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lpc18xx_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_Initialize
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DeInit
</UL>

<P><STRONG><a name="[5a]"></a>UART_DeInit</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, lpc18xx_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxCmd
</UL>

<P><STRONG><a name="[b0]"></a>UART_ConfigStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lpc18xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[5d]"></a>UART_SendByte</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lpc18xx_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
</UL>

<P><STRONG><a name="[5f]"></a>UART_ReceiveByte</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lpc18xx_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive
</UL>

<P><STRONG><a name="[5c]"></a>UART_Send</STRONG> (Thumb, 164 bytes, Stack size 36 bytes, lpc18xx_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_SendData
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RS485Send
</UL>

<P><STRONG><a name="[5e]"></a>UART_Receive</STRONG> (Thumb, 114 bytes, Stack size 28 bytes, lpc18xx_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART_Receive
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveByte
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_ReceiveData
</UL>

<P><STRONG><a name="[b1]"></a>UART_ForceBreak</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lpc18xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[b2]"></a>UART_IntConfig</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, lpc18xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[b3]"></a>UART_GetLineStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lpc18xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[b4]"></a>UART_CheckBusy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lpc18xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>UART_FIFOConfig</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, lpc18xx_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_Initialize
</UL>

<P><STRONG><a name="[65]"></a>UART_FIFOConfigStructInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lpc18xx_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_Initialize
</UL>

<P><STRONG><a name="[b5]"></a>UART_ABCmd</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, lpc18xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>UART_IrDAInvtInputCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lpc18xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>UART_IrDACmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lpc18xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[b8]"></a>UART_IrDAPulseDivConfig</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lpc18xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>UART_FullModemForcePinState</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, lpc18xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[ba]"></a>UART_FullModemConfigMode</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, lpc18xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>UART_FullModemGetStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lpc18xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>UART_RS485Config</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, lpc18xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>UART_RS485ReceiverCmd</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lpc18xx_uart.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>UART_RS485Send</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, lpc18xx_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RS485SendData
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RS485SendSlvAddr
</UL>

<P><STRONG><a name="[61]"></a>UART_RS485SendSlvAddr</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lpc18xx_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RS485Send
</UL>

<P><STRONG><a name="[62]"></a>UART_RS485SendData</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lpc18xx_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RS485Send
</UL>

<P><STRONG><a name="[63]"></a>Host_Initialize</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Host_Initialize &rArr; UART_Init &rArr; uart_set_divisors &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_FIFOConfigStructInit
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_FIFOConfig
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxCmd
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_Init
</UL>

<P><STRONG><a name="[67]"></a>Host_SendData</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Host_SendData &rArr; UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_Process
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_Init
</UL>

<P><STRONG><a name="[be]"></a>Host_Debug</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>Host_ReceiveData</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Host_ReceiveData &rArr; UART_Receive
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_Process
</UL>

<P><STRONG><a name="[64]"></a>scu_pinmux</STRONG> (Thumb, 30 bytes, Stack size 20 bytes, lpc18xx_scu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = scu_pinmux
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_EnableEntity
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_Initialize
</UL>

<P><STRONG><a name="[75]"></a>pdec_new</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lpc18xx_cgu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_pll_regs
</UL>

<P><STRONG><a name="[76]"></a>ndec_new</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, lpc18xx_cgu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_pll_regs
</UL>

<P><STRONG><a name="[74]"></a>mdec_new</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, lpc18xx_cgu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_pll_regs
</UL>

<P><STRONG><a name="[72]"></a>anadeci_new</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, lpc18xx_cgu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_pll_regs
</UL>

<P><STRONG><a name="[73]"></a>anadecp_new</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lpc18xx_cgu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_pll_regs
</UL>

<P><STRONG><a name="[69]"></a>compute_pll_regs</STRONG> (Thumb, 1136 bytes, Stack size 168 bytes, lpc18xx_cgu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anadecp_new
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anadeci_new
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mdec_new
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ndec_new
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pdec_new
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_SetPLL0_Audio
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_SetPLL0
</UL>

<P><STRONG><a name="[7b]"></a>CGU_UpdateClock</STRONG> (Thumb, 260 bytes, Stack size 16 bytes, lpc18xx_cgu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CGU_UpdateClock
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_Init
</UL>

<P><STRONG><a name="[59]"></a>CGU_EntityConnect</STRONG> (Thumb, 116 bytes, Stack size 12 bytes, lpc18xx_cgu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CGU_EntityConnect
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[77]"></a>CGU_EnableEntity</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, lpc18xx_cgu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CGU_EnableEntity &rArr; scu_pinmux
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scu_pinmux
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_ConfigPWR
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_Init
</UL>

<P><STRONG><a name="[7a]"></a>CGU_SetPLL1</STRONG> (Thumb, 160 bytes, Stack size 20 bytes, lpc18xx_cgu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CGU_SetPLL1
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_Init
</UL>

<P><STRONG><a name="[79]"></a>CGU_SetXTALOSC</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lpc18xx_cgu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_Init
</UL>

<P><STRONG><a name="[78]"></a>CGU_Init</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, lpc18xx_cgu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = CGU_Init &rArr; CGU_EnableEntity &rArr; scu_pinmux
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_SetXTALOSC
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_SetPLL1
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_EnableEntity
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_UpdateClock
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_EntityConnect
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry
</UL>

<P><STRONG><a name="[7d]"></a>CGU_GetBaseStatus</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, lpc18xx_cgu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_ConfigPWR
</UL>

<P><STRONG><a name="[7c]"></a>CGU_ConfigPWR</STRONG> (Thumb, 680 bytes, Stack size 16 bytes, lpc18xx_cgu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_ConfigPWR
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_GetBaseStatus
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_EnableEntity
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_ConfigPWR
</UL>

<P><STRONG><a name="[57]"></a>CGU_GetPCLKFrequency</STRONG> (Thumb, 258 bytes, Stack size 8 bytes, lpc18xx_cgu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CGU_GetPCLKFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_set_divisors
</UL>

<P><STRONG><a name="[bf]"></a>CGU_SetDIV</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lpc18xx_cgu.o(.text), UNUSED)

<P><STRONG><a name="[7e]"></a>CGU_SetPLL0</STRONG> (Thumb, 82 bytes, Stack size 72 bytes, lpc18xx_cgu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_pll_regs
</UL>

<P><STRONG><a name="[7f]"></a>CGU_SetPLL0_Audio</STRONG> (Thumb, 86 bytes, Stack size 72 bytes, lpc18xx_cgu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_pll_regs
</UL>

<P><STRONG><a name="[81]"></a>CGU_FrequencyMonitor</STRONG> (Thumb, 170 bytes, Stack size 20 bytes, lpc18xx_cgu.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_RealFrequencyCompare
</UL>

<P><STRONG><a name="[80]"></a>CGU_RealFrequencyCompare</STRONG> (Thumb, 64 bytes, Stack size 36 bytes, lpc18xx_cgu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_FrequencyMonitor
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>c_entry</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = c_entry &rArr; Bootloader_Init &rArr; Host_Initialize &rArr; UART_Init &rArr; uart_set_divisors &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_Process
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_Init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_GetPCLKFrequency
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[29]"></a>main</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = main &rArr; c_entry &rArr; Bootloader_Init &rArr; Host_Initialize &rArr; UART_Init &rArr; uart_set_divisors &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[83]"></a>Bootloader_Init</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, bootloader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Bootloader_Init &rArr; Host_Initialize &rArr; UART_Init &rArr; uart_set_divisors &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_Init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_SendData
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry
</UL>

<P><STRONG><a name="[84]"></a>Bootloader_Process</STRONG> (Thumb, 598 bytes, Stack size 16 bytes, bootloader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Bootloader_Process &rArr; Host_SendData &rArr; UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_ProgramPage
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_EraseSector
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_EraseChip
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTime
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerifyChecksum
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsTimeExpired
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_ReceiveData
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Host_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_entry
</UL>

<P><STRONG><a name="[85]"></a>Memory_Init</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, flashprg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Memory_Init &rArr; CGU_EntityConnect
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_EntityConnect
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_Init
</UL>

<P><STRONG><a name="[89]"></a>Memory_EraseChip</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, flashprg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Memory_EraseChip
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_Process
</UL>

<P><STRONG><a name="[8a]"></a>Memory_EraseSector</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, flashprg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Memory_EraseSector
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_Process
</UL>

<P><STRONG><a name="[8b]"></a>Memory_ProgramPage</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, flashprg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Memory_ProgramPage
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_Process
</UL>

<P><STRONG><a name="[87]"></a>Memory_ReadByte</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, flashprg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerifyChecksum
</UL>

<P><STRONG><a name="[97]"></a>memcpy_spifi_lib</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcpy_spifi_lib
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_erase
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_program
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProt
</UL>

<P><STRONG><a name="[95]"></a>memset_spifi_lib</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, spifi_rom_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_init
</UL>

<P><STRONG><a name="[8f]"></a>read_flash</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, spifi_rom_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readAd
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read04
</UL>

<P><STRONG><a name="[45]"></a>cmd</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProt
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_stat
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send04
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read04
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.constdata)
</UL>
<P><STRONG><a name="[8e]"></a>all_quad</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, spifi_rom_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_erase_cmd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProt
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readProt
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_busy
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wren_sendAd
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send04
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readAd
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read04
</UL>

<P><STRONG><a name="[8d]"></a>read04</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = read04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_quad
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moreId
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxic
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atm
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProt
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDev
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWPSEL
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_mem_mode
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_busy
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wren
</UL>

<P><STRONG><a name="[46]"></a>readAd</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = readAd
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_quad
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProt
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.constdata)
</UL>
<P><STRONG><a name="[47]"></a>send04</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = send04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_quad
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDev
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_mem_mode
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wren_send04
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.constdata)
</UL>
<P><STRONG><a name="[90]"></a>wren</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wren &rArr; read04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read04
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_prog_cmd
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_erase_cmd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProt
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDev
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wren_sendAd
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wren_send04
</UL>

<P><STRONG><a name="[91]"></a>wren_send04</STRONG> (Thumb, 28 bytes, Stack size 20 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = wren_send04 &rArr; send04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wren
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send04
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_erase
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProt
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDev
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_mem_mode
</UL>

<P><STRONG><a name="[48]"></a>wren_sendAd</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = wren_sendAd &rArr; wren &rArr; read04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wren
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_quad
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProt
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_stat
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.constdata)
</UL>
<P><STRONG><a name="[3a]"></a>cancel_mem_mode</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, spifi_rom_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_erase
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_program
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_erase_cmd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProt
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_busy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.constdata)
</UL>
<P><STRONG><a name="[4a]"></a>wait_busy</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = wait_busy &rArr; read04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cancel_mem_mode
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read04
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_quad
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_erase
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prog_block
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_erase_cmd
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_stat
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.constdata)
</UL>
<P><STRONG><a name="[49]"></a>write_stat</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = write_stat &rArr; wait_busy &rArr; read04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_busy
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wren_sendAd
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxic
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProt
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.constdata)
</UL>
<P><STRONG><a name="[3b]"></a>set_mem_mode</STRONG> (Thumb, 142 bytes, Stack size 20 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = set_mem_mode &rArr; wren_send04 &rArr; send04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wren_send04
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send04
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read04
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_erase
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_program
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProt
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.constdata)
</UL>
<P><STRONG><a name="[92]"></a>setWPSEL</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = setWPSEL &rArr; read04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read04
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProt
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDev
</UL>

<P><STRONG><a name="[9b]"></a>setProtEnts</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = setProtEnts
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sst
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxic
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atm
</UL>

<P><STRONG><a name="[94]"></a>getProtBytes</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, spifi_rom_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProt
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readProt
</UL>

<P><STRONG><a name="[93]"></a>readProt</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = readProt
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getProtBytes
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_quad
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProt
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_init
</UL>

<P><STRONG><a name="[43]"></a>setSize</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, spifi_rom_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moreId
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wbd
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sst
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;span
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numo
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxic
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;giga
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esmt
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eon
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chi
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atm
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;amic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.constdata)
</UL>
<P><STRONG><a name="[44]"></a>setDev</STRONG> (Thumb, 418 bytes, Stack size 24 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = setDev &rArr; write_stat &rArr; wait_busy &rArr; read04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWPSEL
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_stat
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wren_send04
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wren
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send04
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read04
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wbd
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sst
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;span
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numo
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxic
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;giga
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;esmt
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eon
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chi
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atm
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;amic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.constdata)
</UL>
<P><STRONG><a name="[37]"></a>spifi_init</STRONG> (Thumb, 466 bytes, Stack size 24 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = spifi_init &rArr; set_mem_mode &rArr; wren_send04 &rArr; send04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pullMISO
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readProt
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_mem_mode
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cancel_mem_mode
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wren_send04
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readAd
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read04
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_flash
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset_spifi_lib
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.constdata)
</UL>
<P><STRONG><a name="[3d]"></a>setProt</STRONG> (Thumb, 1066 bytes, Stack size 88 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = setProt &rArr; set_mem_mode &rArr; wren_send04 &rArr; send04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readProt
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getProtBytes
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setWPSEL
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_mem_mode
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_stat
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cancel_mem_mode
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wren_sendAd
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wren_send04
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wren
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readAd
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read04
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_quad
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_spifi_lib
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_erase
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_program
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.constdata)
</UL>
<P><STRONG><a name="[3c]"></a>checkAd</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = checkAd
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_erase
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_program
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.constdata)
</UL>
<P><STRONG><a name="[3f]"></a>send_erase_cmd</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = send_erase_cmd &rArr; wait_busy &rArr; read04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_busy
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cancel_mem_mode
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wren
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_quad
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_erase
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_program
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.constdata)
</UL>
<P><STRONG><a name="[98]"></a>send_prog_cmd</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = send_prog_cmd &rArr; wren &rArr; read04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wren
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prog_block
</UL>

<P><STRONG><a name="[41]"></a>prog_block</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = prog_block &rArr; wait_busy &rArr; read04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_prog_cmd
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_erase
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_program
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.constdata)
</UL>
<P><STRONG><a name="[40]"></a>ck_erase</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, spifi_rom_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_erase
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_program
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.constdata)
</UL>
<P><STRONG><a name="[99]"></a>ck_setup</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, spifi_rom_api.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_block
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ck_prog
</UL>

<P><STRONG><a name="[42]"></a>ck_prog</STRONG> (Thumb, 98 bytes, Stack size 28 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ck_prog
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ck_setup
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_erase
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_program
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.constdata)
</UL>
<P><STRONG><a name="[3e]"></a>check_block</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = check_block
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ck_setup
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_program
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.constdata)
</UL>
<P><STRONG><a name="[38]"></a>spifi_program</STRONG> (Thumb, 594 bytes, Stack size 160 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = spifi_program &rArr; setProt &rArr; set_mem_mode &rArr; wren_send04 &rArr; send04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_block
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ck_prog
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ck_erase
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prog_block
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_erase_cmd
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkAd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProt
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_mem_mode
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cancel_mem_mode
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_spifi_lib
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.constdata)
</UL>
<P><STRONG><a name="[39]"></a>spifi_erase</STRONG> (Thumb, 514 bytes, Stack size 160 bytes, spifi_rom_api.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = spifi_erase &rArr; setProt &rArr; set_mem_mode &rArr; wren_send04 &rArr; send04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ck_prog
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ck_erase
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prog_block
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_erase_cmd
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkAd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProt
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_mem_mode
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_busy
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cancel_mem_mode
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wren_send04
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy_spifi_lib
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.constdata)
</UL>
<P><STRONG><a name="[30]"></a>amic</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, amic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = amic &rArr; setDev &rArr; write_stat &rArr; wait_busy &rArr; read04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDev
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.text)
</UL>
<P><STRONG><a name="[2e]"></a>atm</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, atmel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = atm &rArr; setDev &rArr; write_stat &rArr; wait_busy &rArr; read04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDev
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSize
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProtEnts
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read04
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.text)
</UL>
<P><STRONG><a name="[31]"></a>chi</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, chi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = chi &rArr; setDev &rArr; write_stat &rArr; wait_busy &rArr; read04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDev
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.text)
</UL>
<P><STRONG><a name="[2d]"></a>eon</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, eon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = eon &rArr; setDev &rArr; write_stat &rArr; wait_busy &rArr; read04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDev
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.text)
</UL>
<P><STRONG><a name="[32]"></a>esmt</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, esmt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = esmt &rArr; setDev &rArr; write_stat &rArr; wait_busy &rArr; read04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDev
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.text)
</UL>
<P><STRONG><a name="[35]"></a>giga</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, giga.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = giga &rArr; setDev &rArr; write_stat &rArr; wait_busy &rArr; read04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDev
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.text)
</UL>
<P><STRONG><a name="[34]"></a>mxic</STRONG> (Thumb, 382 bytes, Stack size 40 bytes, macronix.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = mxic &rArr; setDev &rArr; write_stat &rArr; wait_busy &rArr; read04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDev
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSize
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProtEnts
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_stat
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read04
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.text)
</UL>
<P><STRONG><a name="[9c]"></a>numo_dummies</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, numonyx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = numo_dummies
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numo
</UL>

<P><STRONG><a name="[2f]"></a>numo</STRONG> (Thumb, 292 bytes, Stack size 32 bytes, numonyx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = numo &rArr; setDev &rArr; write_stat &rArr; wait_busy &rArr; read04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numo_dummies
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDev
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.text)
</UL>
<P><STRONG><a name="[9d]"></a>moreId</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, spansion.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = moreId &rArr; read04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSize
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read04
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;span
</UL>

<P><STRONG><a name="[2c]"></a>span</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, spansion.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = span &rArr; setDev &rArr; write_stat &rArr; wait_busy &rArr; read04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moreId
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDev
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.text)
</UL>
<P><STRONG><a name="[33]"></a>sst</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, sst.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = sst &rArr; setDev &rArr; write_stat &rArr; wait_busy &rArr; read04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDev
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSize
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setProtEnts
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.text)
</UL>
<P><STRONG><a name="[9e]"></a>wbd_dummies</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, winbond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wbd_dummies
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wbd
</UL>

<P><STRONG><a name="[36]"></a>wbd</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, winbond.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = wbd &rArr; setDev &rArr; write_stat &rArr; wait_busy &rArr; read04 &rArr; cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wbd_dummies
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDev
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spifi_rom_api.o(.text)
</UL>
<P><STRONG><a name="[a0]"></a>set_uart</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, falcon_details.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_spifi_clk
</UL>

<P><STRONG><a name="[96]"></a>pullMISO</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, falcon_details.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_init
</UL>

<P><STRONG><a name="[c0]"></a>set_spifi_io</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, falcon_details.o(.text), UNUSED)

<P><STRONG><a name="[9f]"></a>set_spifi_clk</STRONG> (Thumb, 208 bytes, Stack size 16 bytes, falcon_details.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_uart
</UL>

<P><STRONG><a name="[4e]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_set_divisors
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit_ExtMemCtl
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitUs
</UL>

<P><STRONG><a name="[c1]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_erase
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spifi_program
</UL>

<P><STRONG><a name="[c2]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_pll_regs
</UL>

<P><STRONG><a name="[a6]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[a7]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[71]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_pll_regs
</UL>

<P><STRONG><a name="[6e]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_pll_regs
</UL>

<P><STRONG><a name="[6a]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_pll_regs
</UL>

<P><STRONG><a name="[6f]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_pll_regs
</UL>

<P><STRONG><a name="[6b]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_pll_regs
</UL>

<P><STRONG><a name="[c3]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_pll_regs
</UL>

<P><STRONG><a name="[6d]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_pll_regs
</UL>

<P><STRONG><a name="[a2]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[c4]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>

<P><STRONG><a name="[c5]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[c6]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[a5]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[a4]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[4c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[c8]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[51]"></a>GetPLL1Param</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, system_lpc18xx.o(i.GetPLL1Param))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetPLL1Param
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetClockFreq
</UL>

<P><STRONG><a name="[c9]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[ca]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[cb]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[d]"></a>RESERVED0</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RESERVED1</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>RESERVED2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc18xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc18xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>WaitUs</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, system_lpc18xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = WaitUs &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit_ExtMemCtl
</UL>

<P><STRONG><a name="[56]"></a>uart_set_divisors</STRONG> (Thumb, 460 bytes, Stack size 80 bytes, lpc18xx_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = uart_set_divisors &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGU_GetPCLKFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[8c]"></a>IsTimeExpired</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, bootloader.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_Process
</UL>

<P><STRONG><a name="[86]"></a>VerifyChecksum</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, bootloader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = VerifyChecksum
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Memory_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_Process
</UL>

<P><STRONG><a name="[88]"></a>GetTime</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bootloader.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bootloader_Process
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
